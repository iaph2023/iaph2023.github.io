{
  "hash": "4171cb2bbbb01f07d9a697d37a19cc06",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Science Final Presentation\"\nauthor: \"Ian Palmer\"\nsubtitle: \"12/09/2024\"\nformat:\n  revealjs:\n    scrollable: true\n    slide-number: true\n    show-slide-number: all\n    embed-resources: true\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\n\n## Project 1 - Part 1: Lisa's Vegetable Garden\n\n- **Dataset:** TidyTuesday's May 28, 2024 release, \"Lisa's Vegetable Garden\".\n  - Records from Lisa Lendway's 2020 and 2021 vegetable gardens.\n  - Includes planting, harvesting, and spending data.\n\n- **Plan:** Explore harvest trends in 2020 by calculating average monthly harvest weights and visualizing seasonal patterns.\n\n- **Skills Developed:** \n  - Developed skills in data wrangling, date manipulation, and visualization with the tidyverse.\n\n## Visulization\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  month      avg_weight\n  <date>          <dbl>\n1 2020-06-01       78.8\n2 2020-07-01      219. \n3 2020-08-01      473. \n4 2020-09-01     1128. \n5 2020-10-01      959. \n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Project 2 - Part 2: Carbon Emissions\n\n- **Dataset:** TidyTuesday's May 21, 2024 release, \"Carbon Emissions\".\n  - Historical emissions data from 1854–present.\n\n- **Plan:** Summarize average annual carbon emissions and visualize trends over time.\n\n- **Devloped Skills:** \n  - Strengthened skills in data summarization, trend analysis, and visualization using the tidyverse.\n\n\n## Visulization\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- emissions |>\n  select(year, total_emissions_MtCO2e) |>\n  group_by(year) |>\n  summarize(ave_emissions = mean(total_emissions_MtCO2e, na.rm = TRUE)) \n```\n:::\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Project 2: Netflix Title Analysis\n\n- **Dataset:** TidyTuesday's April 20, 2021 release, \"Netflix Titles\".\n  - Metadata on Netflix movies and TV shows, including release years, titles, and associated details.\n\n- **Plan:** Explore trends in Netflix’s content catalog:\n  - Analyze the distribution of movies vs. TV shows.\n  - Examine release year trends and common title keywords.\n\n- **Devloped Skills:** \n  - Learned to apply string manipulation and visualization techniques to text-heavy data sets with tidyverse.\n\n## Visualization 1\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnetflix_type_count <- netflix |>\n  count(type)\n```\n:::\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Visualization 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetflix_year_count <- netflix |>\n  count(release_year) |>\n  arrange(desc(n))\n```\n:::\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## Visualization 3\n\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Project 3: NCAA Home-Court Advantage\n\n- **Dataset:** Kaggle March Madness Data (2008–2024, excluding 2020).\n- **Plan:** Test the **null hypothesis** of no difference in win percentages between home and away games using **permutation testing**.\n- **Developed:**\n  - Learned to simulate random outcomes, perform hypothesis testing, and visualize results.\n  \n## Permutation and Null Hypothesis Test\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Calculate the Observed Difference in Median Win Percentage\nobserved_diff <- combined_median_data |>\n  group_by(location) |>\n  summarise(median_win_pct = median(median_win_pct, na.rm = TRUE)) |>\n  summarise(diff = diff(median_win_pct)) |>\n  pull(diff)\n\ncat(\"Observed Difference in Median Win Percentage (Home - Away):\", observed_diff, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nObserved Difference in Median Win Percentage (Home - Away): 31.16884 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define Permutation Function (Shuffling location within each team)\ncalculate_permutation <- function(data) {\n  data |>\n    group_by(TEAM) |>\n    mutate(location = sample(location, replace = FALSE)) |>\n    group_by(location) |>\n    summarise(median_win_pct = median(median_win_pct, na.rm = TRUE)) |>\n    summarise(diff = diff(median_win_pct)) |>\n    pull(diff)\n}\n#Permutation Test\nnum_permutations <- 10000\nperm_results <- map_dbl(1:num_permutations, ~ calculate_permutation(combined_median_data))\n\n# Calculate the two-sided p-value\np_value <- mean(abs(perm_results) >= abs(observed_diff))\ncat(\"Two-Sided P-value:\", p_value, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTwo-Sided P-value: 0 \n```\n\n\n:::\n:::\n\n\n## Visulization\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n## Project 4: SQL Analysis of WAI Auditory Data\n\n- **Goals:** Recreate Figure 1 from Voss (2019) and analyze frequency absorbance trends by age.\n- **Approach:** Use SQL to query the **WAI Database** and R for visualization.\n- **Findings:** \n  -  Strengthened understanding of combining SQL and R for efficient analysis and clear communication of results.\n  \n  \n## SQL Query 1: Recreating Voss Graph\n\n\n::: {.cell}\n\n:::\n\n::: {.cell output.var='data' EVEL='true'}\n\n```{.sql .cell-code}\n\nSELECT \n  Measurements.Identifier,\n  PI_Info.AuthorsShortList,\n  Measurements.Instrument,\n  Measurements.Frequency,\n  AVG(Measurements.Absorbance) AS MeanAbsorbance,\n  CONCAT(PI_Info.AuthorsShortList, ' et al. N=', \n         COUNT(DISTINCT CONCAT(Measurements.SubjectNumber, Measurements.Ear)), ', ', Measurements.Instrument) AS Legend_Label\nFROM Measurements\nJOIN PI_Info ON Measurements.Identifier = PI_Info.Identifier\nWHERE Measurements.Identifier IN ('Abur_2014', 'Feeney_207', 'Groon_2015', 'Lewis_2015', 'Liu_2008', 'Rosowski_2012', 'Shahnaz_2006', 'Shaver_2013', 'Sun_2016', 'Voss_1994', 'Voss_2010', 'Werner_2010')\n  AND Measurements.Frequency >= 200  -- Apply frequency filter in SQL\nGROUP BY Measurements.Identifier, Measurements.Instrument, PI_Info.AuthorsShortList, Measurements.Frequency;\n\n```\n:::\n\n\n\n\n## Visulization 1: Recreating Voss Graph\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n## SQL Query 2: Deeper look into Hunter 2016 Study\n\n\n::: {.cell output.var='age_data_Hunter_2016' EVEL='true'}\n\n```{.sql .cell-code}\nSELECT \n  Subjects.AgeCategoryFirstMeasurement AS AgeCategory, \n  Measurements.Frequency, \n  AVG(Measurements.Absorbance) AS MeanAbsorbance\nFROM Measurements\nJOIN Subjects ON Measurements.SubjectNumber = Subjects.SubjectNumber\nWHERE Measurements.Identifier = 'Hunter_2016' \n  AND Measurements.Frequency >= 200  -- Apply frequency filter in SQL\nGROUP BY Subjects.AgeCategoryFirstMeasurement, Measurements.Frequency;\n\n```\n:::\n\n\n## Visulization 2: Deeper look into Hunter 2016 Study\n\n\n::: {.cell layout-align=\"center\" out.hight='75%'}\n::: {.cell-output-display}\n![](DS_Presentation_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n## Thanks For Listening!",
    "supporting": [
      "DS_Presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}