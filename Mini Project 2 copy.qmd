---
title: "Mini Project 2"
author: "Ian Palmer"
date: 10/02/24
execute: 
  warning: false
  message: false
---

This is my second project which centers on analyzing the Netflix Titles dataset. The focus in this project is to utilize piping to better organize the data. In this project I made three different visualizations. The dataset provides insights into the types of content (movies and TV shows), their release years, associated metadata (e.g., directors, actors, countries of production), and trends across the Netflix platform.


This analysis uses data from the [Netflix Titles Data Source](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-04-20/readme.md), which is available through the TidyTuesday github repository.


*Exploratory Data Analysis*<br>
To introduce the dataset, I begin with a simple exploration of key variables:
```{r, message=FALSE, warning=FALSE}

library(tidyverse)
tuesdata <- tidytuesdayR::tt_load('2021-04-20')
netflix <- tuesdata$netflix

head(netflix,5)
```


A quick overview of the dataset reveals that the majority of content is categorized as either “Movies” or “TV Shows.” Below is a bar chart illustrating the distribution:


```{r, fig.alt= "A bar chart comparing the count of movies and TV shows on Netflix. Movies significantly outnumber TV shows."}

# Distribution of content type
netflix_type_count <- netflix |>
  count(type)

ggplot(netflix_type_count, aes(x = type, y = n, fill = type)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Distribution of Movies vs TV Shows",
    x = "Content Type",
    y = "Count"
  )

```


Here we can see data frames for the amount of movies and TV shows on Netflix from each release year and the amount of Movies and TV shows on Netflix. We can see that there are around double the amount of movies compared to TV shows. There seems to be a trend of more modern TV shows and movies on Netflix.



*Content Trends Over Time*<br>
Analyzing release years shows a clear trend: Netflix’s library is heavily skewed toward modern content, with the majority of titles released after 2000. The following line chart visualizes the distribution of release years:

```{r, fig.alt= "A line chart showing the distribution of Netflix content release years. Titles released after 2000 dominate the platform."}
# Distribution of release years
netflix_year_count <- netflix |>
  count(release_year) |>
  arrange(desc(n))

ggplot(netflix_year_count, aes(x = release_year, y = n)) +
  geom_line() +
  labs(
    title = "Netflix Content Release Year Distribution",
    x = "Release Year",
    y = "Count"
  )
```

From the line chart we can see that movies after 2000 dominate Netflix's discography.


Next I attempted to explore linguistic patterns in Netflix titles. I used str functions str_detect() and str_to_lower() to look for a popular word. Used regular expression "love" to look for the word love in movie and TV titles.
```{r}
# Count titles containing the word "love"
love_count <- netflix |>
  filter(str_detect(str_to_lower(title), "love")) |>
  summarise(count = n())

love_count
```


Uses regular expression "life\|world\|death" to search for more possible popular words in move/tv show titles.
```{r}
# Titles containing the words "life", "world", or "death"
keywords_titles <- netflix |>
  filter(str_detect(str_to_lower(title), "life|world|death"))

head(keywords_titles,10)


```



Then I proceeded to create a count for each of the selected words.
```{r}
# Count occurrences of each word "life", "world", and "death" in the titles
word_count <- netflix |>
  mutate(title_lower = str_to_lower(title)) |>
  
  summarise(
    life_count = sum(str_count(title_lower, "life")),
    world_count = sum(str_count(title_lower, "world")),
    death_count = sum(str_count(title_lower, "death"))
  )


word_count


```



The following code chucks perform three different tasks of counting occurrences of directors, actors, and countries, and then displaying the top 10 most popular in each category. It filters out missing or empty values and splits data where necessary (such as for actors and countries with multiple entries separated by commas).

```{r}


# Count the number of occurrences of each director, excluding missing values
popular_directors <- netflix |>
  filter(!is.na(director) & director != "") |>
  count(director) |>
  arrange(desc(n))

# View the top 10 most popular directors
head(popular_directors, 10)

# Separate the cast into individual actors and count their occurrences
popular_actors <- netflix |>
  filter(!is.na(cast) & cast != "") |>
  separate_rows(cast, sep = ", ") |>
  count(cast) |>
  arrange(desc(n))

# View the top 10 most popular actors
head(popular_actors, 10)

# Separate the country column into individual countries and count their occurrences
popular_countries <- netflix |>
  filter(!is.na(country) & country != "") |>
  separate_rows(country, sep = ", ") |>
  count(country) |>
  arrange(desc(n))

# View the top 10 most popular countries
head(popular_countries, 10)
```

It was very interesting to see the large amount of Indian actors appearing in tv shows/movies compared to the total amount of Indian movies. Perhaps there is a fewer supply of popular actors in Bollywood compared to Hollywood in the United States.



Finally, I created a table that has the top 10 most popular words in Netflix titles. I excluded common conjunction words such as "the", "and", or "of". I also used the regular expressions \\d and \\s+ to filter out digits and whitespace.
```{r}


netflix_lowercase_titles <- netflix |>
  mutate(lower_title = str_to_lower(title))

#Use regular expressions to extract words and exclude those containing digits
netflix_words <- netflix_lowercase_titles |>
  separate_rows(lower_title, sep = "\\s+") |>
  filter(!str_detect(lower_title, "\\d"))

#Remove common words that are not of interest
common_words <- c("the", "and", "in", "of", "to", "a", "is", "for", "with", "on", "at", "by", "an", "from", "i", "&")

netflix_words_final <- netflix_words |>
  filter(!is.element(lower_title, common_words))

#Count the frequency of each word
popular_words <- netflix_words_final |>
  count(lower_title, sort = TRUE)

head(popular_words, 10)

```



Lastly, I created a bar chart from the previous data frame in order to visulize the top 10 most common words in Netflix titles.
```{r, fig.alt= "Bar chart titled “Top 10 Most Common Words in Netflix Titles,” showing the words “love,” “my,” and “Christmas” as the top three, with “love” having the highest frequency. Bars are green, with frequency on the x-axis and words on the y-axis."}

popular_words |>
  head(10) |>
  ggplot(aes(x = reorder(lower_title, n), y = n)) +
  geom_bar(stat = "identity", fill = "green") +
  coord_flip() +
  labs(title = "Top 10 Most Common Words in Netflix Titles",
       x = "Words",
       y = "Frequency")
```

My early prediction of "love", "life", "world" all being popular words in titles turned out to be true. However, "death" did not make the top 10.


*Conclusion*<br>
This project was a great opportunity to practice and build my string manipulation and regular expression skills. By working with the Netflix Titles dataset, I applied several str_*() functions and regular expressions to clean and analyze text data, which was a valuable hands-on experience in managing and extracting important information from more unstructured data. Creating visualizations helped reinforce the importance of organizing data effectively for clear storytelling and making results accessible. This project also revealed some interesting trends in Netflix’s content catalog. The analysis revealed that Netflix’s library is dominated by modern content, with movies significantly outnumbering TV shows. Common themes in titles included "love," "life," and "world," while "death" was less frequent. Indian actors appeared frequently compared to the smaller number of Indian movies, highlighting unique industry dynamics.
